import settings
import datetime
import discord
import asyncio
import random
import re
from discord.ext import commands
from dislash import InteractionClient, ActionRow, Button, ButtonStyle

class adm(commands.Cog):

    def __init__(self, client):
        self.client = client

    @commands.command()
    @commands.has_any_role(952530469751255043, 952530469751255042)
    async def art(self, ctx):
        embed = discord.Embed(
            title = "üèÜ | –ê—Ä—Ö–∏–≤ –ê—Ä—Ç–æ–≤",
            description = "",
            color = 0x81d8d0
        )
        embed.set_footer(icon_url = self.client.user.avatar_url, text = f'{self.client.user.name} | –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã')
        row = ActionRow(
            Button(
                style = ButtonStyle.green,
                custom_id = 'start_',
                disabled = True,
                emoji = '‚ôª'
            ),
            Button(
                style = ButtonStyle.blurple,
                custom_id = 'add',
                emoji = 'üéØ'
            ),
            Button(
                style = ButtonStyle.red,
                custom_id = 'clear_',
                disabled = True,
                emoji = 'üóë'
            )
        )
        msg = await ctx.send(embed = embed, components=[row])
        on_click = await msg.wait_for_button_click(timeout = 120)
        ch = self.client.get_channel(ctx.channel.id)
        for _ in range(1):
            if on_click.component.id == 'start':
                archive_art = self.client.get_channel(1006834087031488602)
                general_art = self.client.get_channel(997425650904338453)
                async for art in general_art.history(limit = None):
                    for attachment in art.attachments:  
                        archive_art = self.client.get_channel(1006834087031488602)                     
                        embed = discord.Embed(
                            title = "",
                            description = "",
                            timestamp = art.created_at,
                            color = art.author.color
                        )
                        embed.set_footer(icon_url = self.client.user.avatar_url, text = f'{self.client.user.name} | –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã')
                        embed.set_author(name = f"–ê—Ä—Ç –æ—Ç {art.author.display_name}", icon_url = art.author.avatar_url)
                        embed.set_image(url = f"{attachment.url}")
                        await archive_art.send(embed=embed)
            if on_click.component.id == 'add':
                archive_arts = self.client.get_channel(1006834087031488602)
                general_art = self.client.get_channel(997425650904338453)
                embed = discord.Embed(
                    title = "üèÜ | –ê—Ä—Ö–∏–≤ –ê—Ä—Ç–æ–≤",
                    description = "*–í–≤–µ–¥–∏—Ç–µ ID —Å–æ–æ–±—â–µ–Ω–∏—è!*",
                    color = 0x1ce091
                )
                embed.set_footer(icon_url = self.client.user.avatar_url, text = f'{self.client.user.name} | –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã')
                await on_click.respond(embed=embed)
                id_msg = await self.client.wait_for('message', check=lambda msg: msg.author == ctx.author)
                msg = await general_art.fetch_message(int(id_msg.content))
                attachment = msg.attachments[0]

                embed = discord.Embed(
                    title = "",
                    description = "",
                    timestamp = msg.created_at,
                    color = msg.author.color
                )
                embed.set_footer(icon_url = self.client.user.avatar_url, text = f'{self.client.user.name} | –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã')
                embed.set_author(name = f"–ê—Ä—Ç –æ—Ç {msg.author.display_name}", icon_url = msg.author.avatar_url)
                embed.set_image(url = f"{attachment.url}")
                await archive_arts.send(embed=embed)
            if on_click.component.id == 'clear':
                archive_arts = self.client.get_channel(1006834087031488602)
                await archive_arts.purge(limit = None)
                embed = discord.Embed(
                    title = "üèÜ | –ê—Ä—Ö–∏–≤ –ê—Ä—Ç–æ–≤",
                    description = "*–ê—Ä—Ö–∏–≤ —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω!*",
                    color = 0x1ce091
                )
                embed.set_footer(icon_url = self.client.user.avatar_url, text = f'{self.client.user.name} | –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã')
                await ch.send(embed=embed)

    @commands.command()
    @commands.has_any_role(997425461317599272, 952530469751255041, 952530469751255042, 952530469751255043)
    async def giveaway(self, ctx):
        await ctx.send("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–Ω–∞–ª, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –≤—ã —Ö–æ—Ç–µ–ª–∏ –±—ã –ø—Ä–æ–≤–µ—Å—Ç–∏ —Ä–æ–∑—ã–≥—Ä—ã—à –ø—Ä–∏–∑–æ–≤.")

        def check(m):
            return m.author == ctx.author and m.channel == ctx.channel

        try:
            msg1 = await self.client.wait_for('message', check=check, timeout=30.0)

            channel_converter = discord.ext.commands.TextChannelConverter()
            try:
                giveawaychannel = await channel_converter.convert(ctx, msg1.content)
            except commands.BadArgument:
                return await ctx.send("–≠—Ç–æ—Ç –∫–∞–Ω–∞–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")

        except asyncio.TimeoutError:
            await ctx.send("–í—ã —Å–ª–∏—à–∫–æ–º –¥–æ–ª–≥–æ –∂–¥–∞–ª–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!")

        if not giveawaychannel.permissions_for(ctx.guild.me).send_messages or not giveawaychannel.permissions_for(
                ctx.guild.me).add_reactions:
            return await ctx.send(
                f"–£ –±–æ—Ç–∞ –Ω–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏: {giveawaychannel}\n ** –ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è: ** ``–î–æ–±–∞–≤–ª—è—Ç—å —Ä–µ–∞–∫—Ü–∏–∏ | –û—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è``.")

        await ctx.send("–°–∫–æ–ª—å–∫–æ –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π —Ä–æ–∑—ã–≥—Ä—ã—à–∞ –≤—ã –±—ã —Ö–æ—Ç–µ–ª–∏?")
        try:
            msg2 = await self.client.wait_for('message', check=check, timeout=30.0)
            try:
                winerscount = int(msg2.content)
            except ValueError:
                return await ctx.send("–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")

        except asyncio.TimeoutError:
            await ctx.send("–í—ã —Å–ª–∏—à–∫–æ–º –¥–æ–ª–≥–æ –∂–¥–∞–ª–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!")

        await ctx.send("–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è —Ä–æ–∑—ã–≥—Ä—ã—à–∞ –ø—Ä–∏–∑–æ–≤.")
        try:
            since = await self.client.wait_for('message', check=check, timeout=30.0)

        except asyncio.TimeoutError:
            await ctx.send("–í—ã —Å–ª–∏—à–∫–æ–º –¥–æ–ª–≥–æ –∂–¥–∞–ª–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!")

        seconds = ("s", "sec", "secs", 'second', "seconds")
        minutes = ("m", "min", "mins", "minute", "minutes")
        hours = ("h", "hour", "hours")
        days = ("d", "day", "days")
        weeks = ("w", "week", "weeks")
        rawsince = since.content

        try:
            temp = re.compile("([0-9]+)([a-zA-Z]+)")
            if not temp.match(since.content):
                return await ctx.send("–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –µ–¥–∏–Ω–∏—Ü—É –≤—Ä–µ–º–µ–Ω–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.")
            res = temp.match(since.content).groups()
            time = int(res[0])
            since = res[1]

        except ValueError:
            return await ctx.send("–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –µ–¥–∏–Ω–∏—Ü—É –≤—Ä–µ–º–µ–Ω–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.")

        if since.lower() in seconds:
            timewait = time
        elif since.lower() in minutes:
            timewait = time * 60
        elif since.lower() in hours:
            timewait = time * 3600
        elif since.lower() in days:
            timewait = time * 86400
        elif since.lower() in weeks:
            timewait = time * 604800
        else:
            return await ctx.send("–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –µ–¥–∏–Ω–∏—Ü—É –≤—Ä–µ–º–µ–Ω–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.")

        await ctx.send("–ö–∞–∫–æ–π –±—ã –≤—ã —Ö–æ—Ç–µ–ª–∏ –ø—Ä–∏–∑?")
        try:
            msg4 = await self.client.wait_for('message', check=check, timeout=30.0)

        except asyncio.TimeoutError:
            await ctx.send("–í—ã —Å–ª–∏—à–∫–æ–º –¥–æ–ª–≥–æ –∂–¥–∞–ª–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")

        logembed = discord.Embed(title="üéâ | –ù–æ–≤—ã–π –†–æ–∑—ã–≥—Ä—ã—à",
                             description=f"**–ü—Ä–∏–∑:** ``{msg4.content}``\n**–ü–æ–±–µ–¥–∏—Ç–µ–ª–µ–π:** ``{winerscount}``\n**–ö–∞–Ω–∞–ª:** {giveawaychannel.mention}\n**–°–æ–∑–¥–∞—Ç–µ–ª—å:** {ctx.author.mention}",
                             color=discord.Color.red())
        logembed.set_thumbnail(url=ctx.author.avatar_url)

        logchannel = ctx.guild.get_channel(1011208572895510628)
        await logchannel.send(embed=logembed)

        futuredate = datetime.datetime.utcnow() + datetime.timedelta(seconds=timewait)
        embed1 = discord.Embed(color=discord.Color(random.randint(0x000000, 0xFFFFFF)),
                           title=f"üéâ | –†–û–ó–´–ì–†–´–®\n`{msg4.content}`", timestamp=futuredate,
                           description=f'–ù–∞–∂–º–∏—Ç–µ –Ω–∞ üéâ —á—Ç–æ–±—ã –≤—Å—Ç—É–ø–∏—Ç—å!\n–°–æ–∑–¥–∞–Ω: {ctx.author.mention}')

        embed1.set_footer(text=f"–†–æ–∑—ã–≥—Ä—ã—à –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è")
        msg = await giveawaychannel.send(embed=embed1)
        await msg.add_reaction("üéâ")
        await asyncio.sleep(timewait)
        message = await giveawaychannel.fetch_message(msg.id)
        for reaction in message.reactions:
            if str(reaction.emoji) == "üéâ":
                users = await reaction.users().flatten()
                if len(users) == 1:
                    return await msg.edit(embed=discord.Embed(title="–ù–∏–∫—Ç–æ –Ω–µ –≤—ã–∏–≥—Ä–∞–ª –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ."))
        try:
            winners = random.sample([user for user in users if not user.bot], k=winerscount)
        except ValueError:
            return await giveawaychannel.send("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤")
        winnerstosend = "\n".join([winner.mention for winner in winners])

        win = await msg.edit(embed=discord.Embed(title="üéâ | –ü–û–ë–ï–î–ò–¢–ï–õ–¨",
                                             description=f"–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º {winnerstosend}, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ **{msg4.content}**!",
                                             color=discord.Color.blue()))

    @commands.command()
    @commands.has_any_role(997425461317599272, 952530469751255041, 952530469751255042, 952530469751255043)
    async def reroll(self, ctx):
        async for message in ctx.channel.history(limit=100, oldest_first=False):
            if message.author.id == self.client.user.id and message.embeds:
                reroll = await ctx.fetch_message(message.id)
                users = await reroll.reactions[0].users().flatten()
                users.pop(users.index(self.client.user))
                winner = random.choice(users)
                await ctx.send(f"–ù–æ–≤—ã–π –ø–æ–±–µ–¥–∏—Ç–µ–ª—å - —ç—Ç–æ {winner.mention}")
                break
        else:
            await ctx.send("–ù–∞ —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ –Ω–µ –ø—Ä–æ–≤–æ–¥–∏—Ç—Å—è –Ω–∏–∫–∞–∫–∏—Ö —Ä–æ–∑—ã–≥—Ä—ã—à–µ–π –ø—Ä–∏–∑–æ–≤.")

    @commands.command()
    @commands.has_any_role(952530469751255043, 952530469751255042)
    async def archive(self, ctx):
        embed = discord.Embed(
            title = "üìö | –ê—Ä—Ö–∏–≤ –ö–∞–Ω–∞–ª–æ–≤",
            description = "",
            color = 0x674ea7
        )
        embed.set_footer(icon_url = self.client.user.avatar_url, text = f'{self.client.user.name} | –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã')

        row = ActionRow(
            Button(
                style = ButtonStyle.red,
                custom_id = 'cancel',
                label = '–û—Ç–º–µ–Ω–∞',
                emoji = 'üîì'
            ),
            Button(
                style = ButtonStyle.blurple,
                custom_id = 'ticket',
                label = '–¢–∏–∫–µ—Ç',
                emoji = 'üéü'
            ),
            Button(
                style = ButtonStyle.blurple,
                custom_id = 'channel',
                label = '–ö–∞–Ω–∞–ª',
                emoji = 'üìö'
            ),
        )
        msg = await ctx.send(embed = embed, components=[row])
        on_click = await msg.wait_for_button_click(timeout = 120)
        ch = self.client.get_channel(ctx.channel.id)
        for _ in range(1):
            if on_click.component.id == 'cancel':
                embed = discord.Embed(
                    title = "üìö | –ê—Ä—Ö–∏–≤ –ö–∞–Ω–∞–ª–æ–≤",
                    description = "**–î–µ–π—Å—Ç–≤–∏–µ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º**",
                    color = 0x674ea7
                )
                embed.set_footer(icon_url = self.client.user.avatar_url, text = f'{self.client.user.name} | –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã')
                await msg.edit(embed = embed)
            if on_click.component.id == 'ticket':
                if ctx.channel.name.startswith('closed'):
                    category = discord.utils.get(ctx.guild.channels, name=settings.channels.ticket_archive)
                    embed = discord.Embed(
                        title = "üìö | –ê—Ä—Ö–∏–≤ –ö–∞–Ω–∞–ª–æ–≤",
                        description = "**–ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ —Ç–∏–∫–µ—Ç–∞ –≤ –∞—Ä—Ö–∏–≤....**",
                        color = 0x674ea7
                    )
                    embed.set_footer(icon_url = self.client.user.avatar_url, text = f'{self.client.user.name} | –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã')
                    await ch.send(embed = embed)
                    await ch.edit(
                        sync_permissions = True,
                        category = category,
                        reason = f'–ê—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ | {ctx.author.name}#{ctx.author.discriminator}'
                    )
                else:
                    embed = discord.Embed(
                        title = "üìö | –ê—Ä—Ö–∏–≤ –ö–∞–Ω–∞–ª–æ–≤",
                        description = "**–î–∞–Ω–Ω—ã–π —Ç–∏–∫–µ—Ç –Ω–µ –∑–∞–∫—Ä—ã—Ç, –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.**",
                        color = 0x674ea7
                    )
                    embed.set_footer(icon_url = self.client.user.avatar_url, text = f'{self.client.user.name} | –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã')
                    await ch.send(embed = embed)
            if on_click.component.id == 'channel':
                category = discord.utils.get(ctx.guild.channels, name=settings.channels.main_archive)
                embed = discord.Embed(
                    title = "üìö | –ê—Ä—Ö–∏–≤ –ö–∞–Ω–∞–ª–æ–≤",
                    description = "**–ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ –≤ –∞—Ä—Ö–∏–≤....**",
                    color = 0x674ea7
                )
                embed.set_footer(icon_url = self.client.user.avatar_url, text = f'{self.client.user.name} | –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã')
                await ch.send(embed = embed)
                await ch.edit(
                    name = f'{ctx.channel.name}_–∞—Ä—Ö–∏–≤',
                    sync_permissions = True,
                    category = category,
                    reason = f'–ê—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ | {ctx.author.name}#{ctx.author.discriminator}'
                )

def setup(client):
    client.add_cog(adm(client))
